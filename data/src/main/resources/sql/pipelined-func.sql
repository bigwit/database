-- Определения функций

CREATE OR REPLACE FUNCTION LOAD_CLIENTS 
RETURN LIST_CLIENT
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM CLIENTS) LOOP
		PIPE ROW (OBJ_CLIENT(
			I.ID, 
			I.SERIAL_PASSPORT, 
			I.NUMBER_PASSPORT, 
			I.NUMBER_VISA, 
			I.ISSUE_DATA_VISA, 
			I.PERIOD_VALID_VISA,
			I.ID_EMPLOYEE,
			I.ID_PEOPLE
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_COMMENTS 
RETURN LIST_COMMENT
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM COMMENTS) LOOP
		PIPE ROW (OBJ_COMMENT(
			I.ID,
			I.TEXT_COMMENT,
			I.ID_HOTEL,
			I.ID_CLIENT,
			I.ID_PLACE,
			I.ID_OFFICE
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_CONTACTS 
RETURN LIST_CONTACT
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM CONTACTS) LOOP
		PIPE ROW (OBJ_CONTACT(
			I.ID,
			I.PHONE,
			I.EMAIL,
			I.ID_LOCATION
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_CURRENCY 
RETURN LIST_CURRENCY
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM CURRENCY) LOOP
		PIPE ROW (OBJ_CURRENCY(
			I.ID,
			I.DESCRIPTION,
			I.RATE
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_EMPLOYEES 
RETURN LIST_EMPLOYEE
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM EMPLOYEES) LOOP
		PIPE ROW (OBJ_EMPLOYEE(
			I.ID,
			I.POSITION,
			I.SALARY,
			I.BONUS,
			I.STATUS,
			I.DESCRIPTION,
			I.ID_OFFICE,
			I.ID_PEOPLE,
			I.ID_CURRENCY
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_FLIGHTS 
RETURN LIST_FLIGHT
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM FLIGHTS) LOOP
		PIPE ROW (OBJ_FLIGHT(
			I.ID,
			I.LEAVING_DATE,
			I.ARRIVAL_DATE,
			I.TYPE_TRANSPORT,
			I.PRICE,
			I.ID_TOUR,
			I.ID_LOCATION_TO,
			I.ID_LOCATION_FROM,
			I.ID_CURRENCY
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_FOOD 
RETURN LIST_FOOD
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM FOOD) LOOP
		PIPE ROW (OBJ_FOOD(
			I.ID,
			I.TYPE,
			I.PRICE,
			I.ID_CURRENCY
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_HOTELS 
RETURN LIST_HOTEL
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM HOTELS) LOOP
		PIPE ROW (OBJ_HOTEL(
			I.ID,
			I.RATING_HOTEL,
			I.ARRIVAL_DATE,
			I.LEAVING_DATE,
			I.DESCRIPTION,
			I.ID_TOUR,
			I.ID_LOCATION
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_LOCATIONS 
RETURN LIST_LOCATION
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM LOCATIONS) LOOP
		PIPE ROW (OBJ_LOCATION(
			I.ID,
			I.COUNTRY,
			I.CITY,
			I.DESCRIPTION
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_OFFICES 
RETURN LIST_OFFICE
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM OFFICES) LOOP
		PIPE ROW (OBJ_OFFICE(
			I.ID,
			I.NAME,
			I.ID_CONTACT
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_PEOPLE 
RETURN LIST_PEOPLE
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM PEOPLES) LOOP
		PIPE ROW (OBJ_PEOPLE(
			I.ID,
			I.FIRST_NAME,
			I.MIDDLE_NAME,
			I.LAST_NAME,
			I.DATE_BIRTH,
			I.SEX,
			I.ID_CONTACT
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_PHOTO 
RETURN LIST_PHOTO
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM PHOTO) LOOP
		PIPE ROW (OBJ_PHOTO(
			I.ID,
			I.PHOTO,
			I.TEXT,
			I.ID_PEOPLE,
			I.ID_HOTEL,
			I.ID_PLACE
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_PLACEMENT
RETURN LIST_PLACEMENT
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM PLACEMENT) LOOP
		PIPE ROW (OBJ_PLACEMENT(
			I.ID,
			I.DESCRIPTION,
			I.PRICE,
			I.ID_CURRENCY
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_PLACES 
RETURN LIST_PLACE
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM PLACES) LOOP
		PIPE ROW (OBJ_PLACE(
			I.ID,
			I.NAME,
			I.DESCRIPTION,
			I.ID_LOCATION,
			I.ID_PLACE
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_ROOMS 
RETURN LIST_ROOM
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM ROOMS) LOOP
		PIPE ROW (OBJ_ROOM(
			I.ID,
			I.ID_HOTEL,
			I.ID_FOOD,
			I.ID_PLACEMENT
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_TOURS 
RETURN LIST_TOUR
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM TOURS) LOOP
		PIPE ROW (OBJ_TOUR(
			I.ID,
			I.NAME,
			I.ID_OFFICE,
			I.ID_PLACE
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_TRAVELS 
RETURN LIST_TRAVEL
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM TRAVELS) LOOP
		PIPE ROW (OBJ_TRAVEL(
			I.ID,
			I.DATE_PAYMENT,
			I.NUMBER_ADULTS,
			I.NUMBER_CHILD,
			I.ID_CLIENT,
			I.ID_TOUR
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION LOAD_USERS
RETURN LIST_USER
PIPELINED
IS BEGIN
	FOR I IN (SELECT * FROM USERS) LOOP
		PIPE ROW (OBJ_USER(
			I.ID,
			I.LOGIN,
			I.HASH_PASSWD,
			I.ROLE,
			I.ID_PEOPLE
		));
	END LOOP;
END;
/

CREATE OR REPLACE FUNCTION FIND_CLIENT_BY_PEOPLE(ID_PEOPLE IN INTEGER)
RETURN LIST_CLIENT PIPELINED
IS 
  I CLIENTS%ROWTYPE;
BEGIN
  SELECT * 
  INTO I
  FROM CLIENTS
  WHERE CLIENTS.ID_PEOPLE = ID_PEOPLE;
  PIPE ROW (OBJ_CLIENT(I.ID, 
    I.SERIAL_PASSPORT, 
    I.NUMBER_PASSPORT, 
    I.NUMBER_VISA, 
    I.ISSUE_DATA_VISA, 
    I.PERIOD_VALID_VISA, 
    I.ID_EMPLOYEE, 
    I.ID_PEOPLE));
EXCEPTION
  WHEN OTHERS THEN PIPE ROW (NULL);
END;
/