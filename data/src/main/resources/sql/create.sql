DROP TABLE CLIENTS CASCADE CONSTRAINTS ;

DROP TABLE COMMENTS CASCADE CONSTRAINTS ;

DROP TABLE CONTACTS CASCADE CONSTRAINTS ;

DROP TABLE CURRENCY CASCADE CONSTRAINTS ;

DROP TABLE EMPLOYEES CASCADE CONSTRAINTS ;

DROP TABLE FLIGHTS CASCADE CONSTRAINTS ;

DROP TABLE FOOD CASCADE CONSTRAINTS ;

DROP TABLE HOTELS CASCADE CONSTRAINTS ;

DROP TABLE LOCATIONS CASCADE CONSTRAINTS ;

DROP TABLE OFFICES CASCADE CONSTRAINTS ;

DROP TABLE PEOPLES CASCADE CONSTRAINTS ;

DROP TABLE PHOTO CASCADE CONSTRAINTS ;

DROP TABLE PLACEMENT CASCADE CONSTRAINTS ;

DROP TABLE PLACES CASCADE CONSTRAINTS ;

DROP TABLE ROOMS CASCADE CONSTRAINTS ;

DROP TABLE TRAVELS CASCADE CONSTRAINTS ;

DROP TABLE TOURS CASCADE CONSTRAINTS ;

DROP TABLE USERS CASCADE CONSTRAINTS ;

-- *********************************************************

CREATE TABLE CLIENTS
  (
    ID                INTEGER NOT NULL ,
    SERIAL_PASSPORT   INTEGER NOT NULL CHECK ( SERIAL_PASSPORT > 0 ) ,
    NUMBER_PASSPORT   INTEGER NOT NULL CHECK ( NUMBER_PASSPORT > 0 ) ,
    NUMBER_VISA       INTEGER CHECK ( NUMBER_VISA > 0 ) ,
    ISSUE_DATA_VISA   DATE ,
    PERIOD_VALID_VISA DATE ,
    ID_EMPLOYEE       INTEGER NOT NULL ,
    ID_PEOPLE         INTEGER NOT NULL ,
    CONSTRAINT CLIENTS_PK PRIMARY KEY ( ID ) ,
    CHECK ( ISSUE_DATA_VISA < PERIOD_VALID_VISA ),
    CONSTRAINT CLIENT_UNIQUE_PEOPLE_ID UNIQUE ( ID_PEOPLE ) 
  ) ;

COMMENT ON COLUMN CLIENTS.ID 			IS 'Уникальный номер клиента';
COMMENT ON COLUMN CLIENTS.SERIAL_PASSPORT 	IS 'Серия паспорта';
COMMENT ON COLUMN CLIENTS.NUMBER_PASSPORT 	IS 'Номер паспорта';
COMMENT ON COLUMN CLIENTS.NUMBER_VISA 		IS 'Номер визы';
COMMENT ON COLUMN CLIENTS.ISSUE_DATA_VISA 	IS 'Дата получения визы';
COMMENT ON COLUMN CLIENTS.PERIOD_VALID_VISA 	IS 'Период действия визы';
COMMENT ON COLUMN CLIENTS.ID_EMPLOYEE 		IS 'Уникальный номер сотрудника';
COMMENT ON COLUMN CLIENTS.ID_PEOPLE 		IS 'Уникальный номер человека';

-- *********************************************************

CREATE TABLE COMMENTS
  (
    ID           INTEGER NOT NULL ,
    TEXT_COMMENT VARCHAR2 (300) NOT NULL CHECK ( NOT REGEXP_LIKE(TEXT_COMMENT, '^\s+$') ) ,
    ID_HOTEL     INTEGER ,
    ID_PEOPLE    INTEGER NOT NULL ,
    ID_PLACE     INTEGER ,
    ID_OFFICE    INTEGER ,
    CONSTRAINT COMMENTS_PK PRIMARY KEY ( ID )
  ) ;

COMMENT ON COLUMN COMMENTS.ID 			IS 'Уникальный номер комментария';
COMMENT ON COLUMN COMMENTS.TEXT_COMMENT 	IS 'Текст комментария';
COMMENT ON COLUMN COMMENTS.ID_HOTEL 		IS 'Уникальный номер отеля';
COMMENT ON COLUMN COMMENTS.ID_PEOPLE 		IS 'Уникальный номер клиента';
COMMENT ON COLUMN COMMENTS.ID_PLACE 		IS 'Уникальный номер места';
COMMENT ON COLUMN COMMENTS.ID_OFFICE 		IS 'Уникальный номер офиса';

-- *********************************************************

CREATE TABLE CONTACTS
  (
    ID          INTEGER NOT NULL ,
    PHONE       VARCHAR2 (30) NOT NULL CHECK ( NOT REGEXP_LIKE (PHONE, '^\s+$') ),
    EMAIL       VARCHAR2 (50) CHECK ( NOT REGEXP_LIKE (EMAIL, '^\s+$') ),
    ID_LOCATION INTEGER NOT NULL,
    CONSTRAINT CONTACTS_PK PRIMARY KEY ( ID )
  ) ;

COMMENT ON COLUMN CONTACTS.ID 			IS 'Уникальный номер контакта';
COMMENT ON COLUMN CONTACTS.PHONE 		IS 'Номер телефона';
COMMENT ON COLUMN CONTACTS.EMAIL 		IS 'Адрес электронной почты';
COMMENT ON COLUMN CONTACTS.ID_LOCATION 		IS 'Уникальный номер локации';

-- *********************************************************

CREATE TABLE CURRENCY
  (
    ID          INTEGER NOT NULL ,
    DESCRIPTION VARCHAR2 (3 BYTE) NOT NULL CHECK ( NOT REGEXP_LIKE (DESCRIPTION, '^\s+$') ), 
    RATE 	FLOAT NOT NULL CHECK ( RATE > 0 ),
    CONSTRAINT CURRENCY_PK PRIMARY KEY ( ID ) 
  ) ;

COMMENT ON COLUMN CURRENCY.ID 			IS 'Уникальный номер валюты';
COMMENT ON COLUMN CURRENCY.DESCRIPTION 		IS 'Наименование кода валюты';
COMMENT ON COLUMN CURRENCY.RATE 		IS 'Курс валюты по отношению к рублю';

-- *********************************************************

CREATE TABLE EMPLOYEES
  (
    ID          INTEGER NOT NULL ,
    POSITION    VARCHAR2 (20) NOT NULL CHECK ( NOT REGEXP_LIKE (POSITION, '^\s+$') ),
    SALARY      FLOAT NOT NULL ,
    BONUS       INTEGER ,
    STATUS      VARCHAR2 (20) NOT NULL CHECK ( STATUS IN ('fired', 'leave', 'works') ),
    DESCRIPTION  VARCHAR2 (300) CHECK ( NOT REGEXP_LIKE (DESCRIPTION, '^\s+$') ),
    ID_OFFICE   INTEGER NOT NULL ,
    ID_PEOPLE   INTEGER NOT NULL ,
    ID_CURRENCY INTEGER NOT NULL,
    CONSTRAINT EMPLOYEES_PK PRIMARY KEY ( ID ),
    CHECK ( NOT REGEXP_LIKE (STATUS, '^\s+$') ),
    CONSTRAINT EMPLOYEE_UNIQUE_PEOPLE_ID UNIQUE ( ID_PEOPLE )
  ) ;

COMMENT ON COLUMN EMPLOYEES.ID 			IS 'Уникальный номер сотрудника';
COMMENT ON COLUMN EMPLOYEES.POSITION 		IS 'Должность';
COMMENT ON COLUMN EMPLOYEES.SALARY 		IS 'Заработная плата';
COMMENT ON COLUMN EMPLOYEES.BONUS 		IS 'Премия';
COMMENT ON COLUMN EMPLOYEES.STATUS 		IS 'Статус';
COMMENT ON COLUMN EMPLOYEES.DESCRIPTION 	IS 'Другое';
COMMENT ON COLUMN EMPLOYEES.ID_OFFICE 		IS 'Уникальный номер офиса';
COMMENT ON COLUMN EMPLOYEES.ID_PEOPLE 		IS 'Уникальный номер человека';

-- *********************************************************

CREATE TABLE FLIGHTS
  (
    ID               INTEGER NOT NULL ,
    LEAVING_DATE     DATE NOT NULL ,
    ARRIVAL_DATE     DATE NOT NULL ,
    TYPE_TRANSPORT   VARCHAR2 (30) NOT NULL CHECK ( NOT REGEXP_LIKE (TYPE_TRANSPORT, '^\s+$') ),
    PRICE            FLOAT NOT NULL CHECK ( PRICE >= 0 ),
    ID_TOUR      INTEGER NOT NULL ,
    ID_LOCATION_TO   INTEGER NOT NULL ,
    ID_LOCATION_FROM INTEGER NOT NULL ,
    ID_CURRENCY      INTEGER NOT NULL ,
    CONSTRAINT FLIGHTS_PK PRIMARY KEY ( ID ),
    CHECK ( LEAVING_DATE <= ARRIVAL_DATE ),
    CHECK ( ID_LOCATION_FROM <> ID_LOCATION_TO )
  ) ;

COMMENT ON COLUMN FLIGHTS.ID 			IS 'Уникальный номер поездки';
COMMENT ON COLUMN FLIGHTS.LEAVING_DATE 		IS 'Дата отправки';
COMMENT ON COLUMN FLIGHTS.ARRIVAL_DATE 		IS 'Дата прибытия';
COMMENT ON COLUMN FLIGHTS.TYPE_TRANSPORT 	IS 'Тип транспорта';
COMMENT ON COLUMN FLIGHTS.PRICE 		IS 'Цена поездки';
COMMENT ON COLUMN FLIGHTS.ID_TOUR 		IS 'Уникальный номер тура';
COMMENT ON COLUMN FLIGHTS.ID_LOCATION_TO 	IS 'Уникальный номер места назначения';
COMMENT ON COLUMN FLIGHTS.ID_LOCATION_FROM 	IS 'Уникальный номер места отправки';
COMMENT ON COLUMN FLIGHTS.ID_CURRENCY 		IS 'Уникальный номер валюты';

-- *********************************************************

CREATE TABLE FOOD
  (
    ID          INTEGER NOT NULL ,
    TYPE        VARCHAR2 (20 BYTE) NOT NULL ,
    PRICE       FLOAT NOT NULL ,
    ID_CURRENCY INTEGER NOT NULL ,
    CONSTRAINT FOOD_PK PRIMARY KEY ( ID ) ,
    CHECK ( PRICE > 0 ) ,
    CHECK ( NOT REGEXP_LIKE (TYPE, '^\s+$') )
  ) ;

COMMENT ON COLUMN FOOD.ID 			IS 'Уникальный номер типа питания';
COMMENT ON COLUMN FOOD.TYPE 			IS 'Тип питания';
COMMENT ON COLUMN FOOD.PRICE 			IS 'Цена типа питания';
COMMENT ON COLUMN FOOD.ID_CURRENCY 		IS 'Уникальный номер валюты';

-- *********************************************************

CREATE TABLE HOTELS
  (
    ID           INTEGER NOT NULL ,
    RATING_HOTEL VARCHAR2 (1 BYTE) NOT NULL CHECK ( RATING_HOTEL IN ('1', '2', '3', '4', '5') ) ,
    ARRIVAL_DATE DATE NOT NULL ,
    LEAVING_DATE DATE NOT NULL ,
    DESCRIPTION  VARCHAR2 (200 BYTE) CHECK ( NOT REGEXP_LIKE (DESCRIPTION, '^\s+$') ),
    ID_TOUR    INTEGER NOT NULL,
    ID_LOCATION  INTEGER NOT NULL,
    CONSTRAINT HOTELS_PK PRIMARY KEY ( ID ),
    CHECK ( ARRIVAL_DATE < LEAVING_DATE )
  ) ;

COMMENT ON COLUMN HOTELS.ID 			IS 'Уникальный номер отеля';
COMMENT ON COLUMN HOTELS.RATING_HOTEL 		IS 'Рейтинг отеля';
COMMENT ON COLUMN HOTELS.ARRIVAL_DATE 		IS 'Дата прибытия';
COMMENT ON COLUMN HOTELS.LEAVING_DATE 		IS 'Дата выселения';
COMMENT ON COLUMN HOTELS.DESCRIPTION 		IS 'Описание отеля';
COMMENT ON COLUMN HOTELS.ID_TOUR 		IS 'Уникальный номер путевки';
COMMENT ON COLUMN HOTELS.ID_LOCATION 		IS 'Уникальный номер локации';

-- *********************************************************

CREATE TABLE LOCATIONS
  (
    ID          INTEGER NOT NULL ,
    COUNTRY     VARCHAR2 (30) NOT NULL CHECK ( NOT REGEXP_LIKE (COUNTRY, '^\s+$') ),
    CITY        VARCHAR2 (30) NOT NULL CHECK ( NOT REGEXP_LIKE (CITY, '^\s+$') ),
    DESCRIPTION VARCHAR2 (300) NOT NULL CHECK ( NOT REGEXP_LIKE (DESCRIPTION, '^\s+$') ),
    CONSTRAINT LOCATIONS_PK PRIMARY KEY ( ID )
  ) ;

COMMENT ON COLUMN LOCATIONS.ID 			IS 'Уникальный номер локации';
COMMENT ON COLUMN LOCATIONS.COUNTRY 		IS 'Страна';
COMMENT ON COLUMN LOCATIONS.CITY 		IS 'Город';
COMMENT ON COLUMN LOCATIONS.DESCRIPTION 	IS 'Адрес';

-- *********************************************************

CREATE TABLE OFFICES
  (
    ID         INTEGER NOT NULL ,
    NAME       VARCHAR2 (30 BYTE) NOT NULL CHECK ( NOT REGEXP_LIKE (NAME, '^\s+$') ),
    ID_CONTACT INTEGER NOT NULL,
    CONSTRAINT OFFICES_PK PRIMARY KEY ( ID )
  ) ;

COMMENT ON COLUMN OFFICES.ID 			IS 'Уникальный номер офиса';
COMMENT ON COLUMN OFFICES.NAME 			IS 'Название офиса';
COMMENT ON COLUMN OFFICES.ID_CONTACT 		IS 'Уникальный номер контакта';

-- *********************************************************

CREATE TABLE PEOPLES
  (
    ID          INTEGER NOT NULL ,
    FIRST_NAME  VARCHAR2 (30) NOT NULL CHECK ( NOT REGEXP_LIKE (FIRST_NAME, '^\s$') ),
    MIDDLE_NAME VARCHAR2 (30) CHECK ( NOT REGEXP_LIKE (MIDDLE_NAME, '^\s$') ),
    LAST_NAME   VARCHAR2 (30) NOT NULL CHECK ( NOT REGEXP_LIKE (LAST_NAME, '^\s$') ),
    DATE_BIRTH  DATE NOT NULL ,
    SEX         VARCHAR2 (1) NOT NULL CHECK ( SEX IN ('F', 'M') ),
    ID_CONTACT  INTEGER NOT NULL,
    CONSTRAINT PEOPLES_PK PRIMARY KEY ( ID )
  ) ;

COMMENT ON COLUMN PEOPLES.ID 			IS 'Уникальный номер человека';
COMMENT ON COLUMN PEOPLES.FIRST_NAME 		IS 'Имя';
COMMENT ON COLUMN PEOPLES.MIDDLE_NAME 		IS 'Отчество';
COMMENT ON COLUMN PEOPLES.LAST_NAME 		IS 'Фамилия';
COMMENT ON COLUMN PEOPLES.DATE_BIRTH 		IS 'Дата рождения';
COMMENT ON COLUMN PEOPLES.SEX 			IS 'Пол';
COMMENT ON COLUMN PEOPLES.ID_CONTACT 		IS 'Уникальный номер контакта';

-- *********************************************************

CREATE TABLE PHOTO
  (
    ID INTEGER NOT NULL ,
    PHOTO BFILE NOT NULL ,
    TEXT      VARCHAR2 (200) CHECK ( NOT REGEXP_LIKE (TEXT, '^\s$') ),
    ID_PEOPLE INTEGER ,
    ID_HOTEL  INTEGER ,
    ID_PLACE  INTEGER,
    CONSTRAINT PHOTO_PK PRIMARY KEY ( ID )
  ) ;

COMMENT ON COLUMN PHOTO.ID 			IS 'Уникальный номер фотографии';
COMMENT ON COLUMN PHOTO.PHOTO 			IS 'Фотография';
COMMENT ON COLUMN PHOTO.TEXT 			IS 'Описание';
COMMENT ON COLUMN PHOTO.ID_PEOPLE 		IS 'Уникальный номер человека';
COMMENT ON COLUMN PHOTO.ID_HOTEL 		IS 'Уникальный номер отеля';
COMMENT ON COLUMN PHOTO.ID_PLACE 		IS 'Уникальный номер места';

-- *********************************************************

CREATE TABLE PLACEMENT
  (
    ID          INTEGER NOT NULL ,
    DESCRIPTION VARCHAR2 (300 BYTE) NOT NULL CHECK ( NOT REGEXP_LIKE (DESCRIPTION, '^\s$') ),
    PRICE       FLOAT NOT NULL CHECK ( PRICE > 0 ),
    ID_CURRENCY INTEGER NOT NULL,
    CONSTRAINT PLACEMENT_PK PRIMARY KEY ( ID )
  ) ;

COMMENT ON COLUMN PLACEMENT.ID 			IS 'Уникальный номер типа размещения';
COMMENT ON COLUMN PLACEMENT.DESCRIPTION 	IS 'Описание типа размещения';
COMMENT ON COLUMN PLACEMENT.PRICE 		IS 'Цена';
COMMENT ON COLUMN PLACEMENT.ID_CURRENCY 	IS 'Уникальный номер валюты';

-- *********************************************************

CREATE TABLE PLACES
  (
    ID          INTEGER NOT NULL ,
    NAME        VARCHAR2 (50 BYTE) NOT NULL CHECK ( NOT REGEXP_LIKE (NAME, '^\s$') ),
    DESCRIPTION VARCHAR2 (200 BYTE) CHECK ( NOT REGEXP_LIKE (DESCRIPTION, '^\s$') ),
    ID_LOCATION INTEGER NOT NULL,
    ID_PLACE    INTEGER,
    CONSTRAINT PLACES_PK PRIMARY KEY ( ID ),
    CHECK ( ID <> ID_PLACE )
  ) ;

COMMENT ON COLUMN PLACES.ID 			IS 'Уникальный номер места';
COMMENT ON COLUMN PLACES.NAME 			IS 'Название места';
COMMENT ON COLUMN PLACES.DESCRIPTION 		IS 'Описание места';
COMMENT ON COLUMN PLACES.ID_LOCATION 		IS 'Уникальный номер локации';
COMMENT ON COLUMN PLACES.ID_PLACE 		IS 'Уникальный номер места';

-- *********************************************************

CREATE TABLE ROOMS
  (
    ID           INTEGER NOT NULL ,
    ID_HOTEL     INTEGER NOT NULL ,
    ID_FOOD      INTEGER NOT NULL ,
    ID_PLACEMENT INTEGER NOT NULL ,
    CONSTRAINT ROOMS_PK PRIMARY KEY ( ID )
  ) ;

COMMENT ON COLUMN ROOMS.ID 			IS 'Уникальный номер комнаты';
COMMENT ON COLUMN ROOMS.ID_HOTEL 		IS 'Уникальный номер отеля';
COMMENT ON COLUMN ROOMS.ID_FOOD 		IS 'Уникальный номер типа питания';
COMMENT ON COLUMN ROOMS.ID_PLACEMENT 		IS 'Уникальный номер типа размещения';

-- *********************************************************

CREATE TABLE TRAVELS
  (
    ID            INTEGER NOT NULL ,
    DATE_PAYMENT  DATE NOT NULL ,
    NUMBER_ADULTS INTEGER NOT NULL CHECK ( NUMBER_ADULTS > 0 ),
    NUMBER_CHILD  INTEGER NOT NULL CHECK ( NUMBER_CHILD >= 0 ),
    ID_CLIENT     INTEGER NOT NULL ,
    ID_TOUR INTEGER NOT NULL,
    CONSTRAINT TRAVELS_PK PRIMARY KEY ( ID )
  ) ;

COMMENT ON COLUMN TRAVELS.ID 			IS 'Уникальный номер путевки';
COMMENT ON COLUMN TRAVELS.DATE_PAYMENT 		IS 'Дата оплаты';
COMMENT ON COLUMN TRAVELS.NUMBER_ADULTS 	IS 'Количество взрослых';
COMMENT ON COLUMN TRAVELS.NUMBER_CHILD 		IS 'Количество детей';
COMMENT ON COLUMN TRAVELS.ID_CLIENT 		IS 'Уникальный номер клиента';
COMMENT ON COLUMN TRAVELS.ID_TOUR 		IS 'Уникальный номер тура';

-- *********************************************************

CREATE TABLE TOURS
(
	ID INTEGER NOT NULL ,
	NAME VARCHAR2 (100 BYTE) NOT NULL CHECK ( NOT REGEXP_LIKE (NAME, '^\s$') ),
	ID_OFFICE INTEGER NOT NULL ,
	ID_PLACE INTEGER NOT NULL ,
        CONSTRAINT TOURS_PK PRIMARY KEY ( ID )
);

COMMENT ON COLUMN TOURS.ID 				IS 'Уникальный номер тура';
COMMENT ON COLUMN TOURS.NAME 			IS 'Название тура';
COMMENT ON COLUMN TOURS.ID_OFFICE 		IS 'Уникальный номер офиса';
COMMENT ON COLUMN TOURS.ID_PLACE 		IS 'Уникальный номер места';

CREATE TABLE USERS
(
	ID INTEGER NOT NULL,
	LOGIN VARCHAR2 (30 BYTE) NOT NULL,
	HASH_PASSWD VARCHAR2 (100 BYTE) NOT NULL,
	ROLE VARCHAR2 (8 BYTE) NOT NULL CHECK ( ROLE IN ('USER', 'EMPLOYEE', 'ROOT') ),
	ID_PEOPLE INTEGER NOT NULL,
		CONSTRAINT USERS_PK PRIMARY KEY ( ID ),
		CONSTRAINT USERS_UK UNIQUE ( LOGIN )
);

COMMENT ON COLUMN USERS.ID				IS 'Уникальный номер юзера';
COMMENT ON COLUMN USERS.LOGIN			IS 'Логин';
COMMENT ON COLUMN USERS.HASH_PASSWD		IS 'Пароль';
COMMENT ON COLUMN USERS.ROLE			IS 'Права пользователя';
COMMENT ON COLUMN USERS.ID_PEOPLE		IS 'Уникальный номер человека';

-- *********************************************************

ALTER TABLE CLIENTS ADD CONSTRAINT CLIENTS_EMPLOYEES_FK FOREIGN KEY ( ID_EMPLOYEE ) REFERENCES EMPLOYEES ( ID ) ON DELETE CASCADE ;

ALTER TABLE CLIENTS ADD CONSTRAINT CLIENTS_PEOPLES_FK FOREIGN KEY ( ID_PEOPLE ) REFERENCES PEOPLES ( ID ) ON DELETE CASCADE ;

ALTER TABLE COMMENTS ADD CONSTRAINT COMMENTS_PEOPLES_FK FOREIGN KEY ( ID_PEOPLE ) REFERENCES PEOPLES ( ID ) ON DELETE CASCADE ;

ALTER TABLE COMMENTS ADD CONSTRAINT COMMENTS_HOTELS_FK FOREIGN KEY ( ID_HOTEL ) REFERENCES HOTELS ( ID ) ON DELETE CASCADE ;

ALTER TABLE COMMENTS ADD CONSTRAINT COMMENTS_OFFICES_FK FOREIGN KEY ( ID_OFFICE ) REFERENCES OFFICES ( ID ) ON DELETE CASCADE ;

ALTER TABLE COMMENTS ADD CONSTRAINT COMMENTS_PLACES_FK FOREIGN KEY ( ID_PLACE ) REFERENCES PLACES ( ID ) ON DELETE CASCADE ;

ALTER TABLE CONTACTS ADD CONSTRAINT CONTACTS_LOCATIONS_FK FOREIGN KEY ( ID_LOCATION ) REFERENCES LOCATIONS ( ID ) ON DELETE CASCADE ;

ALTER TABLE EMPLOYEES ADD CONSTRAINT EMPLOYEES_CURRENCY_FK FOREIGN KEY ( ID_CURRENCY ) REFERENCES CURRENCY ( ID ) ON DELETE CASCADE ;

ALTER TABLE EMPLOYEES ADD CONSTRAINT EMPLOYEES_OFFICES_FK FOREIGN KEY ( ID_OFFICE ) REFERENCES OFFICES ( ID ) ON DELETE CASCADE ;

ALTER TABLE EMPLOYEES ADD CONSTRAINT EMPLOYEES_PEOPLES_FK FOREIGN KEY ( ID_PEOPLE ) REFERENCES PEOPLES ( ID ) ON DELETE CASCADE ;

ALTER TABLE FLIGHTS ADD CONSTRAINT FLIGHTS_CURRENCY_FK FOREIGN KEY ( ID_CURRENCY ) REFERENCES CURRENCY ( ID ) ON DELETE CASCADE ;

ALTER TABLE FLIGHTS ADD CONSTRAINT FLIGHTS_LOCATIONS_FK FOREIGN KEY ( ID_LOCATION_FROM ) REFERENCES LOCATIONS ( ID ) ON DELETE CASCADE ;

ALTER TABLE FLIGHTS ADD CONSTRAINT FLIGHTS_LOCATIONS_FKv1 FOREIGN KEY ( ID_LOCATION_TO ) REFERENCES LOCATIONS ( ID ) ON DELETE CASCADE ;

ALTER TABLE FLIGHTS ADD CONSTRAINT FLIGHTS_TOUR_FK FOREIGN KEY ( ID_TOUR ) REFERENCES TOURS ( ID ) ON DELETE CASCADE ;

ALTER TABLE FOOD ADD CONSTRAINT FOOD_CURRENCY_FK FOREIGN KEY ( ID_CURRENCY ) REFERENCES CURRENCY ( ID ) ON DELETE CASCADE ;

ALTER TABLE HOTELS ADD CONSTRAINT HOTELS_LOCATIONS_FK FOREIGN KEY ( ID_LOCATION ) REFERENCES LOCATIONS ( ID ) ON DELETE CASCADE ;

ALTER TABLE HOTELS ADD CONSTRAINT HOTELS_TOUR_FK FOREIGN KEY ( ID_TOUR ) REFERENCES TOURS ( ID ) ON DELETE CASCADE ;

ALTER TABLE OFFICES ADD CONSTRAINT OFFICES_CONTACTS_FK FOREIGN KEY ( ID_CONTACT ) REFERENCES CONTACTS ( ID ) ON DELETE CASCADE ;

ALTER TABLE PEOPLES ADD CONSTRAINT PEOPLES_CONTACTS_FK FOREIGN KEY ( ID_CONTACT ) REFERENCES CONTACTS ( ID ) ON DELETE CASCADE ;

ALTER TABLE PHOTO ADD CONSTRAINT PHOTO_HOTELS_FK FOREIGN KEY ( ID_HOTEL ) REFERENCES HOTELS ( ID ) ON DELETE CASCADE ;

ALTER TABLE PHOTO ADD CONSTRAINT PHOTO_PEOPLES_FK FOREIGN KEY ( ID_PEOPLE ) REFERENCES PEOPLES ( ID ) ON DELETE CASCADE ;

ALTER TABLE PHOTO ADD CONSTRAINT PHOTO_PLACES_FK FOREIGN KEY ( ID_PLACE ) REFERENCES PLACES ( ID ) ON DELETE CASCADE ;

ALTER TABLE PLACEMENT ADD CONSTRAINT PLACEMENT_CURRENCY_FK FOREIGN KEY ( ID_CURRENCY ) REFERENCES CURRENCY ( ID ) ON DELETE CASCADE ;

ALTER TABLE PLACES ADD CONSTRAINT PLACES_LOCATIONS_FK FOREIGN KEY ( ID_LOCATION ) REFERENCES LOCATIONS ( ID ) ON DELETE CASCADE ;

ALTER TABLE PLACES ADD CONSTRAINT PLACES_PLACES_FK FOREIGN KEY ( ID_PLACE ) REFERENCES PLACES ( ID ) ON DELETE CASCADE ;

ALTER TABLE ROOMS ADD CONSTRAINT ROOMS_FOOD_FK FOREIGN KEY ( ID_FOOD ) REFERENCES FOOD ( ID ) ON DELETE CASCADE ;

ALTER TABLE ROOMS ADD CONSTRAINT ROOMS_HOTELS_FK FOREIGN KEY ( ID_HOTEL ) REFERENCES HOTELS ( ID ) ON DELETE CASCADE ;

ALTER TABLE ROOMS ADD CONSTRAINT ROOMS_PLACEMENT_FK FOREIGN KEY ( ID_PLACEMENT ) REFERENCES PLACEMENT ( ID ) ON DELETE CASCADE ;

ALTER TABLE TRAVELS ADD CONSTRAINT TRAVELS_CLIENTS_FK FOREIGN KEY ( ID_CLIENT ) REFERENCES CLIENTS ( ID ) ON DELETE CASCADE ;

ALTER TABLE TRAVELS ADD CONSTRAINT TRAVEL_TOUR_FK FOREIGN KEY ( ID_TOUR ) REFERENCES TOURS ( ID ) ON DELETE CASCADE ;

ALTER TABLE TOURS ADD CONSTRAINT TOUR_OFFICE_FK FOREIGN KEY ( ID_OFFICE ) REFERENCES OFFICES ( ID ) ON DELETE CASCADE;

ALTER TABLE TOURS ADD CONSTRAINT TOUR_PLACE_FK FOREIGN KEY ( ID_PLACE ) REFERENCES PLACES ( ID ) ON DELETE CASCADE;

ALTER TABLE USERS ADD CONSTRAINT USER_PEOPLE_FK FOREIGN KEY ( ID_PEOPLE ) REFERENCES PEOPLES ( ID ) ON DELETE CASCADE;