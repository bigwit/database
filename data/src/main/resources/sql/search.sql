DROP TABLE SYMBOLS;

CREATE TABLE SYMBOLS (
  ENG CHAR NOT NULL,
  RUS CHAR NOT NULL,
  
  CONSTRAINT SYMBOLS_PK PRIMARY KEY ( ENG, RUS )
);

INSERT INTO SYMBOLS (ENG, RUS) VALUES ('Q', 'Й');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('W', 'Ц');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('E', 'У');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('R', 'К');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('T', 'Е');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('Y', 'Н');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('U', 'Г');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('I', 'Ш');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('O', 'Щ');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('P', 'З');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('[', 'Х');
INSERT INTO SYMBOLS (ENG, RUS) VALUES (']', 'Ъ');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('A', 'Ф');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('S', 'Ы');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('D', 'В');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('F', 'А');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('G', 'П');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('H', 'Р');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('J', 'О');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('K', 'Л');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('L', 'Д');
INSERT INTO SYMBOLS (ENG, RUS) VALUES (';', 'Ж');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('''', 'Э');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('Z', 'Я');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('X', 'Ч');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('C', 'С');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('V', 'М');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('B', 'И');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('N', 'Т');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('M', 'Ь');
INSERT INTO SYMBOLS (ENG, RUS) VALUES (',', 'Б');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('.', 'Ю');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('/', '.');
INSERT INTO SYMBOLS (ENG, RUS) VALUES ('`', 'Ё');

CREATE OR REPLACE FUNCTION RUS_TO_ENG(S_IN IN VARCHAR2) 
RETURN VARCHAR2 IS
  S_OUT VARCHAR2(32767);
BEGIN
  S_OUT := S_IN;
  FOR SYM IN (SELECT * FROM SYMBOLS) LOOP
    S_OUT := REPLACE(S_OUT, SYM.RUS, SYM.ENG);
  END LOOP;
  
  RETURN S_OUT;
END RUS_TO_ENG;
/

CREATE OR REPLACE FUNCTION ENG_TO_RUS(S_IN IN VARCHAR2)
RETURN VARCHAR2 IS
  S_OUT VARCHAR2(32767);
BEGIN
  S_OUT := S_IN;
  FOR SYM IN (SELECT * FROM SYMBOLS) LOOP
    S_OUT := REPLACE(S_OUT, SYM.ENG, SYM.RUS);
  END LOOP;
  
  RETURN S_OUT;
END ENG_TO_RUS;
/

CREATE OR REPLACE FUNCTION SEARCH_TOUR(S_IN IN VARCHAR2)
RETURN LIST_TOUR PIPELINED
IS 
  S_ENG VARCHAR2(32767);
  S_RUS VARCHAR2(32767);
BEGIN
  S_ENG := RUS_TO_ENG(S_IN);
  S_RUS := ENG_TO_RUS(S_IN);
  FOR RT IN (
      SELECT * FROM TOURS
      WHERE NAME = S_IN OR NAME = S_ENG OR NAME = S_RUS
    ) LOOP
    PIPE ROW (OBJ_TOUR(RT.ID, RT.NAME, RT.ID_OFFICE, RT.ID_PLACE));
  END LOOP;
END SEARCH_TOUR;
/